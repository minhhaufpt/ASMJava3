/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package From;

import Entity.SinhVienOB;
import java.awt.Font;
import javax.swing.JOptionPane;
import ListEntity.SinhVien;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NguyenMinhHau_PS24488
 */
public class quanlisinhvien extends javax.swing.JFrame {

    /**
     * Creates new form quanlisinhvien
     */
    SinhVien lsv = new SinhVien();
    String stranh = null;

    public quanlisinhvien() {
        initComponents();
        setTitle("Quản lí sinh viên");
        setTable();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtms = new javax.swing.JTextField();
        txthvt = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtsdt = new javax.swing.JTextField();
        rdonam = new javax.swing.JRadioButton();
        rdonu = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtadc = new javax.swing.JTextArea();
        btnnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        hinhanh = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblbang = new javax.swing.JTable();
        btndsend = new javax.swing.JButton();
        canel = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new ImageIcon(getClass().getResource("/asm/Image/qlsv.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lí sinh viên");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setText("Mã số sinh viên");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel3.setText("Họ tên");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel4.setText("Email");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel5.setText("Số điện thoại");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel6.setText("Giới tính");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel7.setText("Địa chỉ");

        txtms.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        txthvt.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        txtemail.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        txtsdt.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        buttonGroup1.add(rdonam);
        rdonam.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        rdonam.setText("Nam");
        rdonam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdonamActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdonu);
        rdonu.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        rdonu.setText("Nữ");

        txtadc.setColumns(20);
        txtadc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtadc.setRows(5);
        jScrollPane1.setViewportView(txtadc);

        btnnew.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm/Image/new1.png"))); // NOI18N
        btnnew.setText("New");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        btnsave.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm/Image/save1.png"))); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm/Image/delete.png"))); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm/Image/update1.png"))); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        hinhanh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        hinhanh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hinhanh.setText("No Image");
        hinhanh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        hinhanh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hinhanhMouseClicked(evt);
            }
        });

        tblbang.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblbang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã số", "Họ tên", "Email", "Số điện thoại", "Giới tính", "Địa chỉ", "Hình ảnh"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblbang.setRowHeight(18);
        tblbang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblbangMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblbang);
        if (tblbang.getColumnModel().getColumnCount() > 0) {
            tblbang.getColumnModel().getColumn(0).setMaxWidth(120);
            tblbang.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        btndsend.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btndsend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm/Image/email.png"))); // NOI18N
        btndsend.setText("Send Email");
        btndsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndsendActionPerformed(evt);
            }
        });

        canel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        canel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm/Image/cross-icon.png"))); // NOI18N
        canel.setText("Cancel");
        canel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnnew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btndelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdonam)
                                        .addGap(34, 34, 34)
                                        .addComponent(rdonu)
                                        .addGap(346, 346, 346)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnupdate)
                                    .addComponent(btnsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(31, 31, 31))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txthvt, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtms, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(499, 499, 499)
                                .addComponent(btndsend)
                                .addGap(23, 23, 23)
                                .addComponent(canel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 28, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtms, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txthvt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(hinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdonam)
                            .addComponent(rdonu)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnnew)
                                    .addComponent(btnsave))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btndelete)
                                    .addComponent(btnupdate)))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndsend)
                    .addComponent(canel))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hinhanhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hinhanhMouseClicked
        String fileanh = "";
        try {
            JFileChooser c = new JFileChooser("D:\\FPTPoly\\Java3\\Deadline\\JAVA3_PS24488_NguyenMinhHau_AssignmentGD2\\Java3_ASMGD2_NguyenMinhHau_PS24488\\build\\classes\\asm\\anhsinhvien");
            int rVal = c.showOpenDialog(null);
            if (rVal != JFileChooser.CANCEL_OPTION) {
                if (rVal == JFileChooser.OPEN_DIALOG) {
                    File filename = c.getSelectedFile();
                    stranh = c.getSelectedFile().getName();
                    hinhanh.setText("");
                    Image img = ImageIO.read(filename);
                    hinhanh.setIcon(new ImageIcon(img.getScaledInstance(150, 200, 0)));
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ảnh bị lỗi", "Lỗi ảnh", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_hinhanhMouseClicked

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        reset();
    }//GEN-LAST:event_btnnewActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        if (checkNull()) {
            if (validateSV()) {
                if (getdetail() != null) {
                    if (timkiembyID() == -1) {
                        SinhVienOB s = getdetail();
                        lsv.addSV(s);
                        lsv.getAll();
                        JOptionPane.showMessageDialog(this, "Lưu thành công", "Save", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/succes.png")));
                        filltotable();
                        timkiembyID();
                    } else {
                        JOptionPane.showMessageDialog(this, "ID đã tồn tại không thể lưu vui lòng chọn Update nếu muốn thay đổi thông tin", "Save", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/nosuc.png")));
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Vui lòng kiểm tra lại", "Save", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/nosuc.png")));
                }
            }
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        filltotable();
    }//GEN-LAST:event_formWindowOpened

    private void tblbangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbangMouseClicked
        int index = tblbang.getSelectedRow();
        showdetail(index);
    }//GEN-LAST:event_tblbangMouseClicked

    private void rdonamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdonamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdonamActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        if (checkNull()) {
            if (validateSV()) {
                if (getdetail() != null) {
                    int index = tblbang.getSelectedRow();
                    if (timkiembyID() != -1 || index != -1) {
                        SinhVienOB s = getdetail();
                        boolean flat = false;
                        for (SinhVienOB k : lsv.getAll()) {
                            if (s.getMasv().equalsIgnoreCase(k.getMasv())) {
                                flat = true;
                                break;
                            }
                        }
                        if (flat) {
                            if (timkiembyID() == -1) {
                                String ms = lsv.getAll().get(index).getMasv();
                                lsv.updateSV(ms, s.getHovaten(), s.getEmail(), s.getSdt(), s.isGioitinh(), s.getDiachi(), s.getHinhanh());
                                lsv.getAll();
                            } else {
                                lsv.updateSV(s.getMasv(), s.getHovaten(), s.getEmail(), s.getSdt(), s.isGioitinh(), s.getDiachi(), s.getHinhanh());
                                lsv.getAll();
                            }
                            JOptionPane.showMessageDialog(this, "Update thành công", "Update", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/succes.png")));
                            filltotable();
                            timkiembyID();
                        } else {
                            try {
                                txtms.setText(lsv.getAll().get(index).getMasv());
                                JOptionPane.showMessageDialog(this, "Không thể update mã sinh viên", "Update", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/nosuc.png")));
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "Xảy ra lỗi index", "Update", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/nosuc.png")));
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "ID chưa tồn tại hoặc không có dữ liệu", "Update", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/nosuc.png")));
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Vui lòng kiểm tra lại", "Update", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/nosuc.png")));
                }
            }
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int index = tblbang.getSelectedRow();
        if (timkiembyID() != -1 || index != -1) {
            int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa sinh viên này không", "Cảnh báo", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/canhbao.png")));
            if (result == JOptionPane.YES_OPTION) {
                if (timkiembyID() == -1) {
                    String ms = lsv.getAll().get(index).getMasv();
                    lsv.deleteSV(ms);
                } else {
                    String ms = getdetail().getMasv();
                    lsv.deleteSV(ms);
                }
                JOptionPane.showMessageDialog(this, "Xóa thành công", "Delete", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/succes.png")));
                filltotable();
                reset();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không thể xóa vui lòng kiểm tra lại", "Delete", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/nosuc.png")));
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btndsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndsendActionPerformed
        int index = tblbang.getSelectedRow();
        if (timkiembyID() != -1 || index != -1) {
            SinhVienOB s = getdetail();
            boolean flat = false;
            for (SinhVienOB k : lsv.getAll()) {
                if (s.getMasv().equalsIgnoreCase(k.getMasv())) {
                    flat = true;
                    break;
                }
            }
            if (flat) {
                try {
                    Gmail g = new Gmail(s.getEmail());
                    g.setVisible(true);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            } else {
                try {
                    Gmail g = new Gmail(lsv.getAll().get(index).getEmail());
                    g.setVisible(true);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
        } else {
            try {
                Gmail g = new Gmail();
                g.setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }//GEN-LAST:event_btndsendActionPerformed

    private void canelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canelActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn thoát không ", "Cảnh báo", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/asm/Image/canhbao.png")));
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_canelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanlisinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanlisinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanlisinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanlisinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanlisinhvien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btndsend;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton canel;
    private javax.swing.JLabel hinhanh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JRadioButton rdonam;
    private javax.swing.JRadioButton rdonu;
    private javax.swing.JTable tblbang;
    private javax.swing.JTextArea txtadc;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txthvt;
    private javax.swing.JTextField txtms;
    private javax.swing.JTextField txtsdt;
    // End of variables declaration//GEN-END:variables
    public void setTable() {
        tblbang.getTableHeader().setFont(new Font("Arial", Font.PLAIN, 15));
    }

    public void reset() {
        txtms.setText("");
        txthvt.setText("");
        txtemail.setText("");
        txtadc.setText("");
        txtsdt.setText("");
        rdonam.setSelected(true);
        hinhanh.setIcon(null);
        hinhanh.setText("No Image");
//        tblbang.setRowSelectionAllowed(false);
        tblbang.clearSelection();
    }

    public SinhVienOB getdetail() {
        if (checkNull()) {
            if (validateSV()) {
                SinhVienOB s = new SinhVienOB();
                s.setMasv(txtms.getText());
                s.setHovaten(txthvt.getText());
                s.setEmail(txtemail.getText());
                s.setDiachi(txtadc.getText());
                s.setSdt(txtsdt.getText());
                s.setGioitinh(rdonam.isSelected() ? true : false);
                if (stranh == null) {
                    s.setHinhanh("No Image");
                } else {
                    s.setHinhanh(stranh);
                }
                return s;
            }
        }
        return null;

    }

    public void showdetail(int index) {
        SinhVienOB sv = lsv.getAll().get(index);
        txtms.setText(sv.getMasv());
        txthvt.setText(sv.getHovaten());
        txtemail.setText(sv.getEmail());
        txtsdt.setText(sv.getSdt());
        txtadc.setText(sv.getDiachi());
        if (sv.isGioitinh()) {
            rdonam.setSelected(true);
        } else {
            rdonu.setSelected(true);
        }
        if (sv.getHinhanh().equals("No Image") || sv.getHinhanh() == null) {
            hinhanh.setText("No Image");
            hinhanh.setIcon(null);
            stranh = null;
        } else {
            hinhanh.setText("");
            ImageIcon IM = new ImageIcon(getClass().getResource("/asm/anhsinhvien/" + sv.getHinhanh()));
            Image img = IM.getImage();
            hinhanh.setIcon(new ImageIcon(img.getScaledInstance(150, 200, 0)));
            stranh = sv.getHinhanh();
        }
    }

    public int timkiembyID() {
        String id = txtms.getText();
        ArrayList<SinhVienOB> sv = lsv.getAll();
        for (SinhVienOB x : sv) {
            if (x.getMasv().equals(id)) {
                tblbang.setRowSelectionInterval(sv.indexOf(x), sv.indexOf(x));
                return sv.indexOf(x);
            }
        }
        return -1;
    }

    public void filltotable() {
        DefaultTableModel model = (DefaultTableModel) tblbang.getModel();
        model.setRowCount(0);
        for (SinhVienOB s : lsv.getAll()) {
            Object[] rowdata = {s.getMasv(), s.getHovaten(), s.getEmail(), s.getSdt(), s.isGioitinh() ? "Nam" : "Nữ", s.getDiachi(), s.getHinhanh()};
            model.addRow(rowdata);
        }
    }

    public boolean validateSV() {
        String chke = "\\w+@\\w{3,8}+\\.+\\w{2,3}+\\.+\\w{2,3}";
        String chke1 = "\\w+@\\w{3,8}+\\.+\\w{2,4}";

        String chkt = "[^0-9]{3,30}";
        String chkdt = "[0-9]{9,11}";
        if (!txthvt.getText().matches(chkt)) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập họ tên từ 3 - 30 kí tự không có số", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            txthvt.requestFocus();
            return false;
        } else if (!txtemail.getText().matches(chke)) {
            if (!txtemail.getText().matches(chke1)) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đúng định dạng email", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                txtemail.requestFocus();
                return false;
            }

        } else if (!txtsdt.getText().matches(chkdt)) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đúng định dạng số điện thoại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            txtsdt.requestFocus();
            return false;
        }
        return true;
    }

    public boolean checkNull() {
        if (txtms.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã số", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            txtms.requestFocus();
            return false;
        } else if (txthvt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập họ tên ", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            txthvt.requestFocus();
            return false;
        } else if (txtemail.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập email ", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            txtemail.requestFocus();
            return false;
        } else if (txtsdt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số điện thoại ", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            txtsdt.requestFocus();
            return false;
        } else if (rdonam.isSelected() == false && rdonu.isSelected() == false) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn giới tính", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (txtadc.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập địa chỉ ", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            txtadc.requestFocus();
            return false;
        }
        return true;
    }
}
